Object.defineProperty(exports,"__esModule",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _class,_jsxFileName='src/GridView/index.js';var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactNative=require('react-native');var _mobxReact=require('mobx-react');var _TouchableView=require('../TouchableView');var _TouchableView2=_interopRequireDefault(_TouchableView);var _Theme=require('../Theme');var _Theme2=_interopRequireDefault(_Theme);var _uuid=require('uuid');var _uuid2=_interopRequireDefault(_uuid);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var GridView=(0,_mobxReact.observer)(_class=function(_Component){_inherits(GridView,_Component);_createClass(GridView,[{key:'componentWillReceiveProps',value:function componentWillReceiveProps(nextProps){this.setState({draggable:nextProps.draggable,dataSource:nextProps.dataSource});}}]);function GridView(props){_classCallCheck(this,GridView);var _this=_possibleConstructorReturn(this,(GridView.__proto__||Object.getPrototypeOf(GridView)).call(this,props));_this.renderItem=function(item,index){return _react2.default.createElement(_reactNative.Animated.View,_extends({style:{width:_this.itemWidth,height:_this.itemHeight,position:'absolute',left:item.left,top:item.top}},_this.createItemPanResponder(item).panHandlers,{key:_uuid2.default.v4(),__source:{fileName:_jsxFileName,lineNumber:87}}),_this.props.itemRender(item.itemSource,index));};_this.createItemPanResponder=function(item){return _reactNative.PanResponder.create({onStartShouldSetPanResponder:function onStartShouldSetPanResponder(evt,gestureState){console.log('down');return _this.state.draggable;},onStartShouldSetPanResponderCapture:function onStartShouldSetPanResponderCapture(evt,gestureState){console.log('down Capture');_this.pressedTime=Date.now();_this.longPressDrag=false;_this.longPressDragCancel=false;return _this.state.draggable;},onMoveShouldSetPanResponder:function onMoveShouldSetPanResponder(evt,gestureState){console.log('move');var longPressDrag=Date.now()-_this.pressedTime>1500;return _this.state.draggable||_this.longPressDrag&&_this.props.longPressDraggable;},onMoveShouldSetPanResponderCapture:function onMoveShouldSetPanResponderCapture(evt,gestureState){console.log('move Capture');if(!_this.longPressDragCancel){if(Date.now()-_this.pressedTime>1500){_this.longPressDrag=true;}else if(Math.abs(gestureState.dx)>5||Math.abs(gestureState.dy)>5){_this.longPressDragCancel=true;}}return _this.state.draggable||_this.longPressDrag&&_this.props.longPressDraggable;},onPanResponderGrant:function onPanResponderGrant(evt,gestureState){console.log('pushed ');},onPanResponderMove:function onPanResponderMove(evt,gestureState){var dx=gestureState.dx;var dy=gestureState.dy;var newLeft=item.leftStatic+dx;var newTop=item.topStatic+dy;item.left.setValue(newLeft);item.top.setValue(newTop);var selfIndex=item.sortIndex;var currentIndex=_this.point2Index({y:newTop+_this.itemHeight/2,x:newLeft+_this.itemWidth/2});if(currentIndex>selfIndex){for(var i=selfIndex+1;i<=currentIndex;i++){var newSortIndex=i-1;var moveItem=_this.findItemBySortIndex(i);moveItem.sortIndex=newSortIndex;_this._runPositionMoveAnim(moveItem);}item.sortIndex=currentIndex;}if(currentIndex<selfIndex){for(var _i=selfIndex-1;_i>=currentIndex;_i--){var _newSortIndex=_i+1;var _moveItem=_this.findItemBySortIndex(_i);_moveItem.sortIndex=_newSortIndex;_this._runPositionMoveAnim(_moveItem);}item.sortIndex=currentIndex;}},onPanResponderTerminationRequest:function onPanResponderTerminationRequest(evt,gestureState){console.log('TerminationRequest');return _this.state.draggable;},onPanResponderRelease:function onPanResponderRelease(evt,gestureState){console.log('release');_this._runPositionMoveAnim(item,function(){if(_this.props.onDragged){_this.props.onDragged(_this.itemInfoList.sort(function(a,b){return a.sortIndex-b.sortIndex;}).map(function(item){return item.itemSource;}));}});},onPanResponderTerminate:function onPanResponderTerminate(evt,gestureState){console.log('cancel');_this._runPositionMoveAnim(item,function(){if(_this.props.onDragged){_this.props.onDragged(_this.itemInfoList.sort(function(a,b){return a.sortIndex-b.sortIndex;}).map(function(item){return item.itemSource;}));}});},onShouldBlockNativeResponder:function onShouldBlockNativeResponder(evt,gestureState){console.log('block native');return _this.state.draggable;}});};_this.findItemBySortIndex=function(sortIndex){for(var i=0;i<_this.itemInfoList.length;i++){if(_this.itemInfoList[i].sortIndex===sortIndex){return _this.itemInfoList[i];}}};_this._runPositionMoveAnim=function(item,callback){item.leftStatic=item.sortIndex%_this.column*_this.itemWidth;item.topStatic=Math.floor(item.sortIndex/_this.column)*_this.itemHeight;_reactNative.Animated.parallel([_reactNative.Animated.timing(item.left,{toValue:item.leftStatic,duration:250}),_reactNative.Animated.timing(item.top,{toValue:item.topStatic,duration:250})]).start(callback);};_this.state={width:300,draggable:_this.props.draggable,dataSource:_this.props.dataSource};return _this;}_createClass(GridView,[{key:'render',value:function render(){var children=this.state.dataSource;var itemCount=children.length;var column=4;var row=Math.ceil(itemCount/column);var width=this.state.width;var itemWidth=width/column;var itemHeight=itemWidth;var height=itemWidth*row;this.width=width;this.height=height;this.itemCount=itemCount;this.column=column;this.itemWidth=itemWidth;this.itemHeight=itemHeight;this.itemInfoList=children.map(function(item,index){var itemSortIndex=item.sortIndex===undefined?index:item.sortIndex;var left=itemSortIndex%column*itemWidth;var top=Math.floor(itemSortIndex/column)*itemHeight;return{left:new _reactNative.Animated.Value(left),leftStatic:left,top:new _reactNative.Animated.Value(top),topStatic:top,index:index,sortIndex:itemSortIndex,itemSource:item};});this.itemWidth=itemWidth;return _react2.default.createElement(_reactNative.View,{style:{width:width,height:height,backgroundColor:"#EEE"},__source:{fileName:_jsxFileName,lineNumber:70}},_react2.default.createElement(_reactNative.View,{style:styles.fillParent,__source:{fileName:_jsxFileName,lineNumber:78}},this.itemInfoList.map(this.renderItem)));}},{key:'point2Index',value:function point2Index(point){var rowNum=Math.floor(point.y/this.itemHeight);var colNum=Math.floor(point.x/this.itemWidth);return Math.max(0,Math.min(this.itemCount-1,rowNum*this.column+colNum));}},{key:'index2Point',value:function index2Point(index){var dotSize=this.size/3;var rowNum=Math.floor(index/3);var colNum=index%3;var y=rowNum*dotSize+dotSize/2;var x=colNum*dotSize+dotSize/2;return{x:x,y:y};}},{key:'isInDot',value:function isInDot(point){var index=this.point2Index(point);var centerPoint=this.index2Point(index);return{index:index,centerPoint:centerPoint};}}]);return GridView;}(_react.Component))||_class;var styles=_Theme2.default.createStyle(function(){return{fillParent:{position:'absolute',left:0,top:0,right:0,bottom:0}};});exports.default=GridView;